{"version":3,"file":"static/js/602.804ccc9b.chunk.js","mappings":"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","sources":["api/search-movies.js","components/searchbar/SearchBar.jsx","components/Movies.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst API_KEY = \"1abb76271df016504764626124badd3a\";\nconst BASE_URL = \"https://api.themoviedb.org/3/search/movie\";\n\nexport const searchMovies = async (query) => {\n    try {\n        const resp = await axios.get(BASE_URL, {\n            params: {\n                api_key:API_KEY,\n                query,\n            }\n        });\n        return resp.data.results;\n    }catch(error){\n        console.error('Error:', error.message);\n        throw error;\n    }\n}","import { useState } from \"react\";\n//import css\n\nexport const SearchBar =({onSubmit})=>{\n    const [value, setValue] = useState('');\n\n    const submit = evt =>{\n        evt.preventDefault();\n        onSubmit(value);\n        setValue();\n    };\n    return(\n        <form onSubmit={submit}>\n            <input \n            type=\"text\"\n            value={value}\n            onChange = {evt=>setValue(evt.target.value)}\n             />\n             <button type=\"submit\">\n                Search\n             </button>\n        </form>\n    )\n}","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { Link, useLocation } from 'react-router-dom';\nimport { searchMovies } from 'api/search-movies';\nimport { SearchBar } from './searchbar/SearchBar';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery = searchParams.get('searchQuery') ?? '';\n  const [movies, setMovies] = useState([]);\n  const location = useLocation();\n\n  const queryStringUpdate = name => {\n    if (name === '') return;\n    setSearchParams({ searchQuery: name });\n    getMovies(name);\n  };\n  const getMovies = async query => {\n    try {\n      const movies = await searchMovies(query);\n      setMovies(movies);\n    } catch (error) {\n      console.error('Error in movies:', error.message);\n    }\n  };\n  useEffect(() => {\n    if (searchQuery !== '') {\n      getMovies(searchQuery);\n    }\n  }, [searchQuery]);\n  return (\n    <div>\n      <SearchBar value={searchQuery} onSubmit={queryStringUpdate} />\n      <ul>\n        {movies.map(({ id, title }) => (\n          <li key={id}>\n            <Link\n              to={`${id}`}\n              state={{\n                from: location,\n              }}\n            >\n              {title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\nexport default Movies;"],"names":["searchMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","query","resp","_context","prev","next","axios","params","api_key","sent","abrupt","data","results","t0","console","error","message","stop","_x","apply","arguments","SearchBar","onSubmit","_useState","useState","_useState2","_slicedToArray","value","setValue","_jsxs","evt","preventDefault","children","_jsx","type","onChange","target","_searchParams$get","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","searchQuery","get","movies","setMovies","location","useLocation","getMovies","_movies","useEffect","name","map","_ref2","id","title","Link","to","concat","state","from"],"sourceRoot":""}